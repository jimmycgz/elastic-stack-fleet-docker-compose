---
- name: Prepare containers
  hosts: elastic_agents
  gather_facts: false
  tasks:
    - name: Debug variables
      debug:
        msg: 
          - "ELK Kibana Host: {{ elk_kibana_host }}"
          - "Fleet Host: {{ fleet_host }}"
          - "Stack Version: {{ stack_version }}"
          - "Auth Method: {{ auth_method }}"

    - name: Install Python3
      raw: which python3 || (apt-get update && apt-get install -y python3)
      changed_when: false

    - name: Install required packages
      raw: apt-get install -y curl apt-transport-https gnupg
      changed_when: false

- name: Verify connectivity to ELK stack
  hosts: elastic_agents
  gather_facts: false
  tasks:
    - name: Check Kibana connectivity with API Key
      uri:
        url: "{{ elk_kibana_host }}/api/status"
        method: GET
        validate_certs: no
        headers:
          Authorization: "ApiKey {{ elk_api_key }}"
      register: kibana_status
      ignore_errors: yes
      when: auth_method == 'api_key'

    - name: Check Kibana connectivity with Basic Auth
      uri:
        url: "{{ elk_kibana_host }}/api/status"
        method: GET
        validate_certs: no
        url_username: "{{ elk_username }}"
        url_password: "{{ elk_password }}"
      register: kibana_status
      ignore_errors: yes
      when: auth_method == 'basic_auth'

    - name: Fail if Kibana is not reachable
      fail:
        msg: "Unable to connect to Kibana at {{ elk_kibana_host }}. Please check the URL and ensure Kibana is running and accessible."
      when: kibana_status is failed

- name: Install Elastic Agent
  hosts: elastic_agents
  vars:
    ansible_remote_tmp: /tmp/.ansible
  roles:
    - es-agent
